#ifndef WIFI_BITMAPS_H
#define WIFI_BITMAPS_H
#define IDLE_FRAMES 5
#define IDLE_SPEED  20  // below this wpm value your animation will idle

// #define PREP_FRAMES 1 // uncomment if >1

#define TAP_FRAMES 2
#define TAP_SPEED  40  // above this wpm value typing animation to trigger

#define ANIM_FRAME_DURATION 200  // how long each frame lasts in ms
// #define SLEEP_TIMER 60000 // should sleep after this period of 0 wpm, needs
// fixing
#define ANIM_SIZE \
  636  // number of bytes in array, minimize for adequate firmware size, max is
       // 1024
// 'wifi_1', 32x32px
unsigned char wifi_bitmap_wifi_1[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0f, 0xf0, 0x00,
    0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x07, 0xe0, 0x00,
    0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
// 'wifi_2', 32x32px
unsigned char wifi_bitmap_wifi_2[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xc0, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x3f, 0xfe, 0x00,
    0x00, 0xff, 0xff, 0x00, 0x00, 0xfe, 0x7f, 0x00, 0x00, 0xf8, 0x1f, 0x00,
    0x00, 0x77, 0xee, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0f, 0xf0, 0x00,
    0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x07, 0xe0, 0x00,
    0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
// 'wifi_3', 32x32px
unsigned char wifi_bitmap_wifi_3[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0xff, 0xff, 0x00,
    0x01, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0xe0, 0x07, 0xf0, 0x0f, 0xf0,
    0x0f, 0xc3, 0xc3, 0xf0, 0x07, 0x9f, 0xf9, 0xe0, 0x02, 0x3f, 0xfe, 0x00,
    0x00, 0xff, 0xff, 0x00, 0x00, 0xfe, 0x7f, 0x00, 0x00, 0xf8, 0x1f, 0x00,
    0x00, 0x77, 0xee, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0f, 0xf0, 0x00,
    0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x07, 0xe0, 0x00,
    0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
// 'wifi', 32x32px
unsigned char wifi_bitmap_wifi[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x01, 0xff, 0xff, 0x80,
    0x07, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xf0, 0x3f, 0xf0, 0x0f, 0xf8,
    0x7f, 0x80, 0x01, 0xfe, 0x7e, 0x3f, 0xf8, 0x7e, 0x7c, 0xff, 0xff, 0x3e,
    0x71, 0xff, 0xff, 0x8e, 0x07, 0xff, 0xff, 0xe0, 0x07, 0xf0, 0x0f, 0xf0,
    0x0f, 0xc3, 0xc3, 0xf0, 0x07, 0x9f, 0xf9, 0xe0, 0x02, 0x3f, 0xfe, 0x00,
    0x00, 0xff, 0xff, 0x00, 0x00, 0xfe, 0x7f, 0x00, 0x00, 0xf8, 0x1f, 0x00,
    0x00, 0x77, 0xee, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0f, 0xf0, 0x00,
    0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x07, 0xe0, 0x00,
    0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// Array of all bitmaps for convenience. (Total bytes used to store imagesin =
// 576)
int wifi_bitmap_allArray_LEN = 4;
unsigned char* wifi_bitmap_allArray[4] = {
    wifi_bitmap_wifi_1,
    wifi_bitmap_wifi_2,
    wifi_bitmap_wifi_3,
    wifi_bitmap_wifi,
};

// 'attack_1', 32x32px
unsigned char wifi_bitmap_attackattack_1[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x04, 0x00, 0x00, 0x00, 0x1b, 0xd8, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x10, 0x08, 0x00, 0x00, 0x0a, 0x52, 0x00, 0x00, 0x43, 0xc2, 0x00,
    0x00, 0x29, 0x84, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x06, 0x70, 0x00,
    0x00, 0x09, 0x80, 0x00, 0x00, 0x0b, 0xd0, 0x00, 0x00, 0x07, 0xe0, 0x00,
    0x00, 0x06, 0x20, 0x00, 0x00, 0x04, 0x20, 0x00, 0x00, 0x04, 0x20, 0x00,
    0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00,
    0x00, 0x07, 0xe0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x01, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
// 'attack_2', 32x32px
unsigned char wifi_bitmap_attackattack_2[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x04, 0x00, 0x00, 0x00, 0x1b, 0xd8, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0x10, 0x08, 0x00, 0x00, 0x0a, 0x52, 0x00, 0x00, 0x43, 0xc2, 0x00,
    0x00, 0x29, 0xc4, 0x00, 0x00, 0x0f, 0xe8, 0x00, 0x00, 0x0f, 0xf0, 0x00,
    0x00, 0x1f, 0xf8, 0x00, 0x00, 0x1f, 0xd8, 0x00, 0x00, 0x07, 0xe0, 0x00,
    0x00, 0x06, 0x20, 0x00, 0x00, 0x04, 0x20, 0x00, 0x00, 0x04, 0x20, 0x00,
    0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00,
    0x00, 0x07, 0xe0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x01, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
// 'attack_3', 32x32px
unsigned char wifi_bitmap_attackattack_3[] = {
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    // 0x00, 0x00, 0x00, 0x00,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
    // 0x00, 0x1b, 0xd8, 0x00,
    // 0x00, 0x01, 0x00, 0x00, 0x00, 0x17, 0xe8, 0x00, 0x00, 0x1f, 0xfa, 0x00,
    // 0x00, 0x5f, 0xfa, 0x00,
    // 0x00, 0x3d, 0xfc, 0x00, 0x00, 0x3f, 0xec, 0x00, 0x00, 0x0f, 0xf0, 0x00,
    // 0x00, 0x1f, 0xf8, 0x00,
    // 0x00, 0x1f, 0xd8, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x06, 0x20, 0x00,
    // 0x00, 0x04, 0x20, 0x00,
    // 0x00, 0x04, 0x20, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00,
    // 0x00, 0x07, 0xe0, 0x00,
    // 0x00, 0x07, 0xe0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x01, 0x80, 0x00,
    // 0x00, 0x00, 0x00, 0x00,
    // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    // 0x00, 0x00, 0x00, 0x00
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x11, 0x10, 0x00, 0x00, 0x32, 0x18, 0x80, 0x00, 0x02, 0x80, 0x00,
    0x04, 0x02, 0x80, 0x00, 0x00, 0x10, 0x10, 0x80};
// 'attack_4', 32x32px
unsigned char wifi_bitmap_attackattack_4[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00,
    0x00, 0x0f, 0xf0, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x3f, 0xfe, 0x00,
    0x00, 0x7f, 0xfe, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x7f, 0xfe, 0x00,
    0x00, 0x3d, 0xfc, 0x00, 0x00, 0x3f, 0xec, 0x00, 0x00, 0x0f, 0xf0, 0x00,
    0x00, 0x1f, 0xf8, 0x00, 0x00, 0x1f, 0xd8, 0x00, 0x00, 0x07, 0xe0, 0x00,
    0x00, 0x06, 0x20, 0x00, 0x00, 0x04, 0x20, 0x00, 0x00, 0x04, 0x20, 0x00,
    0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00,
    0x00, 0x07, 0xe0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x01, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// Array of all bitmaps for convenience. (Total bytes used to store images in =
// 576)
int wifi_bitmap_attackallArray_LEN = 4;
unsigned char* wifi_bitmap_attackallArray[4] = {
    wifi_bitmap_attackattack_1, wifi_bitmap_attackattack_2,
    wifi_bitmap_attackattack_3, wifi_bitmap_attackattack_4};

#endif  // WIFI_BITMAPS_H
